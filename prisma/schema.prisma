generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Countries {
  id        Int         @id @default(autoincrement())
  iso       String      @db.Char(2)
  name      String
  nicename  String
  iso3      String?     @db.Char(3)
  numcode   Int?
  phonecode Int
  districts Districts[] @relation("countriesTodistricts")
  regions   Regions[]
  wards     Wards[]     @relation("countriesTowards")

  @@map("countries")
}

model Districts {
  districtName         String?    @map("district_name")
  districtCode         Int        @id @map("district_code")
  watcher_count        Int?
  view_count           Int?
  general_locations_id Int?
  propertiesCount      Int?       @map("properties_count")
  regionId             Int?       @map("region_id")
  country_id           Int?
  countries            Countries? @relation("countriesTodistricts", fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  general              General?   @relation("districtsTogeneral", fields: [general_locations_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  regions              Regions?   @relation(fields: [regionId], references: [regionCode], onDelete: NoAction, onUpdate: NoAction)
  wards                Wards[]

  @@map("districts")
}

model Places {
  id                   Int      @id @default(autoincrement())
  placeName            String?  @map("place_name")
  view_count           Int?
  propertiesCount      Int?     @map("properties_count")
  wardId               Int?     @map("ward_id")
  district_id          Int?
  region_id            Int?
  country_id           Int?
  general_locations_id Int?
  general              General? @relation("generalToplaces", fields: [general_locations_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("places")
}

model Regions {
  regionName           String?     @map("region_name")
  regionCode           Int         @id @map("region_code")
  watcher_count        Int?
  view_count           Int?
  general_locations_id Int?        @map("general_locations_id")
  propertiesCount      Int?        @map("properties_count")
  countryId            Int?        @map("country_id")
  districts            Districts[]
  countries            Countries?  @relation(fields: [countryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  general              General?    @relation("generalToregions", fields: [general_locations_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  wards                Wards[]

  @@map("regions")
}

model Wards {
  wardName             String?    @map("ward_name")
  wardCode             Int        @id @map("ward_code")
  districtId           Int?       @map("district_id")
  region_id            Int?
  country_id           Int?
  view_count           Int?
  propertiesCount      Int?       @map("properties_count")
  general_locations_id Int?
  countries            Countries? @relation("countriesTowards", fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  districts            Districts? @relation(fields: [districtId], references: [districtCode], onDelete: NoAction, onUpdate: NoAction)
  general              General?   @relation("generalTowards", fields: [general_locations_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  regions              Regions?   @relation(fields: [region_id], references: [regionCode], onDelete: NoAction, onUpdate: NoAction)

  @@map("wards")
}

model General {
  id                     Int         @id @default(autoincrement())
  countryId              Int?        @map("country_id")
  region                 String      @db.VarChar
  regioncode             Int
  district               String      @db.VarChar
  districtcode           Int
  ward                   String      @db.VarChar
  wardcode               Int
  street                 String?     @db.VarChar
  places                 String?     @db.VarChar
  districts              Districts[] @relation("districtsTogeneral")
  places_generalToplaces Places[]    @relation("generalToplaces")
  regions                Regions[]   @relation("generalToregions")
  wards                  Wards[]     @relation("generalTowards")

  @@map("general")
}
